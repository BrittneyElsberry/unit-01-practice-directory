[{"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\index.js":"1","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\reportWebVitals.js":"2","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\App.js":"3","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Header.js":"4","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Main.js":"5","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Accomplishments.js":"6","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\JobListing.js":"7","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Goals.js":"8","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Edit.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":530,"mtime":1612979683454,"results":"13","hashOfConfig":"11"},{"size":539,"mtime":1612385541227,"results":"14","hashOfConfig":"11"},{"size":1911,"mtime":1612369074307,"results":"15","hashOfConfig":"11"},{"size":2870,"mtime":1612381031068,"results":"16","hashOfConfig":"11"},{"size":2730,"mtime":1612378752010,"results":"17","hashOfConfig":"11"},{"size":561,"mtime":1612375919624,"results":"18","hashOfConfig":"11"},{"size":2039,"mtime":1612389619359,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1twh4r4",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\index.js",[],["43","44"],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\reportWebVitals.js",[],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\App.js",["45","46","47","48","49","50"],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Header.js",[],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Main.js",[],"C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Accomplishments.js",["51"],"import React, {Component} from 'react'\r\nimport Main from './Main'\r\nimport axios from 'axios'\r\nimport Edit from './Edit'\r\n\r\n\r\n\r\nclass Accomplishments extends Component{\r\nconstructor(){\r\n    super()\r\n    this.state = {\r\n        id: 0,\r\n        skills: '',\r\n        accomplishments: [],\r\n        editing: false\r\n\r\n    }\r\n}\r\n\r\ncomponentDidMount(){\r\n    this.getSkills()\r\n}\r\n\r\n\r\ngetSkills=()=>{\r\n    axios.get('/api/careerSkills')\r\n    .then(res => {\r\n        this.setState({\r\n            accomplishments: res.data\r\n        })\r\n    }).catch(err => console.log(err))\r\n    }\r\n\r\n\r\n    postSkills=(skills)=>{\r\n        axios.post('/api/careerSkills', {skills}) \r\n        .then(res => {\r\n            console.log(res.data)\r\n            this.setState({\r\n                accomplishments: res.data,\r\n                skills: ''\r\n                \r\n            })\r\n        }).catch(err => console.log(err))\r\n        }\r\n\r\n        updateSkills= (id, skills) =>{\r\n            axios.put(`/api/careerSkills/${id}`, {skills}) \r\n            .then(res => {\r\n                console.log(res.data)\r\n                this.setState({\r\n                    accomplishments: res.data\r\n                })\r\n            }).catch(err => console.log(err))\r\n            }\r\n    \r\n\r\n\r\n  deleteSkills = id =>{\r\n      axios.delete(`/api/careerSkills/${id}`)\r\n      .then(res => {\r\n          this.setState({\r\n                accomplishments: res.data\r\n          })\r\n      }).catch(err => console.log(err))\r\n  }      \r\n\r\n\r\n handleChange= e =>{\r\n     console.log(e)\r\n    this.setState({skills: e})\r\n }  \r\n        \r\n\r\nhandleEdit=()=>{\r\nthis.setState({editing: true}) \r\n}\r\n\r\n\r\n\r\nrender(){\r\n\r\n    return(\r\n        <div className=\"AccompContainer\"> \r\n            <br></br>\r\n            <br></br>\r\n            <h1 className=\"accompHeader\">Career Accomplishments</h1>\r\n            <br></br>\r\n            \r\n            <input className=\"AccompInput\" \r\n                    type=\"text\" \r\n                    value={this.state.skills}\r\n                   onChange={(e)=>this.handleChange(e.target.value)}></input>\r\n        \r\n            <button className=\"submitButton\" onClick={()=>this.postSkills(this.state.skills)}>Submit</button>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <ul>\r\n            {this.state.accomplishments.map(accomp => {\r\n             return <Edit key={accomp.id} accomp={accomp} deleteSkills={this.deleteSkills} updateSkills={this.updateSkills} handleChange={this.handleChange} skills={this.state.skills}/> })}\r\n             {/* return <ul key={accomp.id}>{accomp.skills}<button onClick={()=>this.deleteSkills(this.state.accomplishments.id)}>X</button><button onClick={(e)=>this.handleEdit(e)}>Edit</button></ul> })} */}</ul>\r\n            \r\n  \r\n            \r\n\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nexport default Accomplishments","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\JobListing.js",["52","53"],"import React, {Component} from 'react'\r\nimport Main from './Main'\r\n\r\n\r\nconst JobListing = (props)=> {\r\nconsole.log(props)\r\n  \r\n    return (\r\n        <div className=\"jobListingContainer\">\r\n            <h1 className=\"jlheader \">Job Listing</h1>\r\n            <br></br>\r\n            <p className=\"descrip\">Company: </p> {props.jobListing.company}\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\">Job Title:</p> <span className=\"jobContent\">{props.jobListing.jobtitle}</span>\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\" >About: </p> <span className=\"jobContent\"> <br></br>{props.jobListing.about}</span>\r\n            <br></br>\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\">Responsibilities: </p><br></br> {props.jobListing.responsibilities}\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\"> Skill Requirements:</p> \r\n            <br></br>\r\n            {props.jobListing.skillrequirements ? (\r\n                         <ul><li>{props.jobListing.skillrequirements[0]}</li>\r\n                         <li>{props.jobListing.skillrequirements[1]}</li>\r\n                         <li>{props.jobListing.skillrequirements[2]}</li>\r\n                         <li>{props.jobListing.skillrequirements[3]}</li>\r\n                         <li>{props.jobListing.skillrequirements[4]}</li>\r\n                         <li>{props.jobListing.skillrequirements[5]}</li>\r\n                         <li>{props.jobListing.skillrequirements[6]}</li> \r\n             </ul>\r\n\r\n             ) : null }\r\n    \r\n            <br></br>\r\n            <p className=\"descrip\">Technical Knowledge Requirements: </p>\r\n            <br></br>\r\n            {props.jobListing.technicalknowledgerequirements ? (\r\n\r\n            <ul ><li>{props.jobListing.technicalknowledgerequirements[0]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[1]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[2]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[3]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[4]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[5]}</li>\r\n            <li>{props.jobListing.technicalknowledgerequirements[6]}</li>\r\n\r\n            </ul> ) : null }\r\n            \r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\">Employement Type:</p>{props.jobListing.employmenttype}\r\n            <br></br>\r\n            <br></br>\r\n            <p className=\"descrip\">Seniority Level: </p>{props.jobListing.senioritylevel}\r\n            <br></br>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default JobListing\r\n","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Goals.js",["54"],"import React, {Component} from 'react'\r\n\r\nclass Goals extends Component {\r\nconstructor(){\r\n    super()\r\n}\r\n\r\nrender(){\r\n    return(\r\n    \r\n    <div className=\"goalsContainer\">\r\n    <h1 className=\"goalsHeader\">Goals</h1>\r\n    <br></br>\r\n    <input className=\"goalsInput\"/>\r\n    <button className=\"goalsSubmitbtn\">Submit</button>\r\n    <br></br>\r\n    <input className=\"sdinput\"/><button className=\"startDatebtn\">Start Date</button>\r\n    <input className=\"edinput\"/><button className=\"endDatebtn\">End Date</button>\r\n\r\n\r\n    </div>)\r\n}\r\n\r\n\r\n}\r\n\r\nexport default Goals","C:\\Users\\britt\\DevMountain\\unit-04\\nodb-career-tool\\src\\components\\Edit.js",["55","56","57"],"import React, {Component} from 'react'\r\nimport Accomplishments from './Accomplishments'\r\nimport axios from 'axios'\r\n\r\n\r\nclass Edit extends Component {\r\nconstructor(){\r\nsuper()\r\nthis.state = {\r\n    editing: false,\r\n    userInput: ''\r\n   \r\n}\r\n}\r\n\r\ntoggleEditMode=()=>{\r\n    this.setState({editing: true})\r\n}\r\n\r\nhandleEditChange=(e)=>{\r\n    this.setState({userInput: e.target.value})\r\n}\r\n\r\nrender(){\r\n    const {accomp, deleteSkills, updateSkills, skills} = this.props\r\n    \r\nreturn(\r\n\r\n    <>\r\n    {this.state.editing ? (\r\n\r\n        <li><input className=\"editInput\" \r\n                    value={this.state.userInput}\r\n                    type=\"text\" \r\n                    onChange={(e)=>this.handleEditChange(e)}/>\r\n\r\n       <button className=\"editSavebtn\" onClick={()=> \r\n       {\r\n           updateSkills(accomp.id, this.state.userInput)\r\n           this.setState({editing: false})\r\n        }}>Save</button></li>\r\n    ): (\r\n        <li className=\"accompListEditXbtns\">\r\n              {accomp.skills}\r\n             \r\n             <button className=\"editXbtn\" onClick={()=>deleteSkills(accomp.id)}>X</button>\r\n             <button className=\"editbtn\" onClick={(e)=>this.toggleEditMode(e)}>Edit</button>\r\n        </li>\r\n    ) }\r\n    </>\r\n            )\r\n\r\n\r\n}\r\n\r\n    // return(\r\n    \r\n    // <div> \r\n\r\n\r\n    //           {this.state.accomplishments.map(accomp => {\r\n    //          return {this.state.editing \r\n    //          ? \r\n    //             <input key={accomp.id}>{accomp.skills}<button onClick={()=>this.deleteSkills(this.state.accomplishments.id)}>X</button><button onClick={(e)=>this.handleSave(e)}>Save</button> <input/>\r\n    //         : \r\n    //           <ul key={accomp.id}>{accomp.skills}<button onClick={()=>this.deleteSkills(this.state.accomplishments.id)}>X</button><button onClick={(e)=>this.handleSave(e)}>Save</button></ul>        \r\n\r\n      // onChange={(e)=>handleSave(e.target.value)\r\n      //  value={this.state.userInput}\r\n          \r\n\r\n    //      )}    \r\n   \r\n    //  )}  )  </div> )\r\n}\r\nexport default Edit\r\n\r\n\r\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"62","severity":1,"message":"66","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":14},{"ruleId":"62","severity":1,"message":"67","line":7,"column":8,"nodeType":"64","messageId":"65","endLine":7,"endColumn":23},{"ruleId":"62","severity":1,"message":"68","line":8,"column":8,"nodeType":"64","messageId":"65","endLine":8,"endColumn":18},{"ruleId":"62","severity":1,"message":"69","line":9,"column":8,"nodeType":"64","messageId":"65","endLine":9,"endColumn":13},{"ruleId":"62","severity":1,"message":"70","line":10,"column":8,"nodeType":"64","messageId":"65","endLine":10,"endColumn":13},{"ruleId":"62","severity":1,"message":"71","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":12},{"ruleId":"62","severity":1,"message":"72","line":1,"column":16,"nodeType":"64","messageId":"65","endLine":1,"endColumn":25},{"ruleId":"62","severity":1,"message":"71","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":12},{"ruleId":"73","severity":1,"message":"74","line":4,"column":1,"nodeType":"75","messageId":"76","endLine":6,"endColumn":2},{"ruleId":"62","severity":1,"message":"67","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":23},{"ruleId":"62","severity":1,"message":"69","line":3,"column":8,"nodeType":"64","messageId":"65","endLine":3,"endColumn":13},{"ruleId":"62","severity":1,"message":"77","line":25,"column":48,"nodeType":"64","messageId":"65","endLine":25,"endColumn":54},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Accomplishments' is defined but never used.","'JobListing' is defined but never used.","'axios' is defined but never used.","'Goals' is defined but never used.","'Main' is defined but never used.","'Component' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'skills' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]